// ----------- –í—Å–µ –º–µ—Ç–æ–¥—ã –û–û–ü –≤ –æ–¥–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ -------------------

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ "–ñ–∏–≤–æ—Ç–Ω–æ–µ"
class Animal {
    #sex; // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏
    constructor(name, age, sex) {
        this.name = name;
        this.age = age;
        this.#sex = sex;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∏–∑–¥–∞–Ω–∏—è –∑–≤—É–∫–∞
    makeSound() {
        console.log(`${this.name} –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫.`);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∏–≤–æ—Ç–Ω–æ–º
    getInfo() {
        return `${this.name} - –≤–æ–∑—Ä–∞—Å—Ç: ${this.age} –ª–µ—Ç.`;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏)
    getSex() {
        return `${this.name} - –ø–æ–ª: ${this.#sex}.`;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏)
    setSex(sex) {
        this.#sex = sex
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª–∞—Å—Å–∞ "–°–æ–±–∞–∫–∞", –Ω–∞—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç "–ñ–∏–≤–æ—Ç–Ω–æ–µ"
class Dog extends Animal {
    constructor(name, age, breed) {
        super(name, age); // –í—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞
        this.breed = breed;
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è –∏–∑–¥–∞–Ω–∏—è –∑–≤—É–∫–∞
    makeSound() {
        console.log(`${this.name} –≥–∞–≤–∫–∞–µ—Ç.`);
    }

    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Ä–æ–¥–µ
    getBreedInfo() {
        return `${this.name} - –ø–æ—Ä–æ–¥–∞: ${this.breed}.`;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª–∞—Å—Å–∞ "–ö–æ—à–∫–∞", –Ω–∞—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç "–ñ–∏–≤–æ—Ç–Ω–æ–µ"
class Cat extends Animal {
    constructor(name, age, color) {
        super(name, age); // –í—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞
        this.color = color;
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è –∏–∑–¥–∞–Ω–∏—è –∑–≤—É–∫–∞
    makeSound() {
        console.log(`${this.name} –º—è—É–∫–∞–µ—Ç.`);
    }

    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–≤–µ—Ç–µ
    getColorInfo() {
        return `${this.name} - —Ü–≤–µ—Ç: ${this.color}.`;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–æ–≤
const dog = new Dog('–†–µ–∫—Å', 5, '–ù–µ–º–µ—Ü–∫–∞—è –æ–≤—á–∞—Ä–∫–∞');
const cat = new Cat('–ú—É—Ä–∫–∞', 3, '–°–µ—Ä—ã–π');

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤
dog.makeSound(); // –†–µ–∫—Å –≥–∞–≤–∫–∞–µ—Ç.
console.log(dog.getInfo()); // –†–µ–∫—Å - –≤–æ–∑—Ä–∞—Å—Ç: 5 –ª–µ—Ç.
console.log(dog.getBreedInfo()); // –†–µ–∫—Å - –ø–æ—Ä–æ–¥–∞: –ù–µ–º–µ—Ü–∫–∞—è –æ–≤—á–∞—Ä–∫–∞.

// –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏
dog.setSex('–ú—É–∂—Å–∫–æ–π');
console.log(dog.getSex()); // –ú—É–∂—Å–∫–æ–π

cat.makeSound(); // –ú—É—Ä–∫–∞ –º—è—É–∫–∞–µ—Ç.
console.log(cat.getInfo()); // –ú—É—Ä–∫–∞ - –≤–æ–∑—Ä–∞—Å—Ç: 3 –ª–µ—Ç.
console.log(cat.getColorInfo()); // –ú—É—Ä–∫–∞ - —Ü–≤–µ—Ç: –°–µ—Ä—ã–π.

// –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏
cat.setSex('–ñ–µ–Ω—Å–∫–∏–π');
console.log(cat.getSex()); // –ñ–µ–Ω—Å–∫–∏–π

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞
const animals = [dog, cat];
animals.forEach(animal => animal.makeSound());

/*
| üß© –ü—Ä–∏–Ω—Ü–∏–ø                     | üí¨ –ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç                                                | ‚öôÔ∏è –ö–∞–∫ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ JS                                | üí° –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞                                                   | ‚úÖ –ï—Å—Ç—å –Ω–∞—Ç–∏–≤–Ω–æ?  |
| ------------------------------ | -------------------------------------------------------------- | ------------------------------------------------------ | ---------------------------------------------------------------- | ---------------- |
| **–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è**               | –°–∫—Ä—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –Ω–∞—Ä—É–∂—É | –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–æ–ª—è `#`, –∑–∞–º—ã–∫–∞–Ω–∏—è, –≥–µ—Ç—Ç–µ—Ä—ã/—Å–µ—Ç—Ç–µ—Ä—ã         | `js class User { #pwd = '123'; getPwd() { return this.#pwd; } }` | ‚úÖ (—á–µ—Ä–µ–∑ `#`)    |
| **–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ**               | –û–¥–∏–Ω –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –¥—Ä—É–≥–æ–≥–æ                 | `extends` + `super()`                                  | `js class Dog extends Animal { speak() { super.speak(); } }`     | ‚úÖ                |
| **–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º**                | –û–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äî —Ä–∞–∑–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏                             | –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö                  | `js class Cat extends Animal { speak(){console.log('Meow')}}`    | ‚úÖ                |
| **–ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è**                 | –í—ã–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—É—Ç—å, –±–µ–∑ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏                           | "–ë–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã" —Å –º–µ—Ç–æ–¥–∞–º–∏-–∑–∞–≥–ª—É—à–∫–∞–º–∏                 | `js class Shape { draw(){ throw 'Must implement'; } }`           | ‚öôÔ∏è (—ç–º—É–ª–∏—Ä—É–µ—Ç—Å—è) |
| **–ö–æ–º–ø–æ–∑–∏—Ü–∏—è**                 | –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (has-a)                      | –í–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã / –∏–Ω—ä–µ–∫—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π              | `js class Car { constructor(engine){ this.engine = engine; } }`  | ‚úÖ (–ª–æ–≥–∏—á–µ—Å–∫–∏)    |
| **–ò–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ**            | –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞                                    | `new ClassName()`                                      | `js const u = new User();`                                       | ‚úÖ                |
| **–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞**       | –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ (public/private)                            | `#private`, `_protected` (—É—Å–ª–æ–≤–Ω–æ)                     | `js #secret; _semiPrivate;`                                      | ‚úÖ (—á–∞—Å—Ç–∏—á–Ω–æ)     |
| **–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (override)** | –ó–∞–º–µ–Ω–∞ –º–µ—Ç–æ–¥–∞ —Ä–æ–¥–∏—Ç–µ–ª—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–µ                            | –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥                       | `js speak(){ console.log('bark'); }`                             | ‚úÖ                |
| **–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ (overload)**      | –ù–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ —Å –æ–¥–Ω–∏–º –∏–º–µ–Ω–µ–º, —Ä–∞–∑–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏          | –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞—Ç–∏–≤–Ω–æ (—ç–º—É–ª–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏) | `js add(a,b){ if(b) return a+b; return a; }`                     | ‚ùå                |
| **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã**                 | –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–µ–∑ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏                           | –≠–º—É–ª–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã / TypeScript      | `ts interface Animal { speak(): void }`                          | ‚ùå (–µ—Å—Ç—å –≤ TS)    |

 */