// –û–±—ä–µ–∫—Ç String –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –∏ –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤.
// –î—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º (–≤–≤–µ–¥—ë–Ω–Ω—ã–º –≤ ECMAScript 5) —è–≤–ª—è–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∫–∞–∫ –º–∞—Å—Å–∏–≤–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —á–∏—Å–ª–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã:
// –í JavaScript —É —Å—Ç—Ä–æ–∫ (String) –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –º–µ—Ç–æ–¥–æ–≤ ‚Äî –±–æ–ª–µ–µ 40 —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–µ—Ä—Å–∏–∏ ECMAScript.

let sampleString = "Hello, World!";
console.log(sampleString[7]);  // 'W'
console.log(sampleString.length); // '–•—Ä–∞–Ω–∏—Ç –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏. –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.'

//--------------| String Methods |--------------//

// 1. –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Å—Ç—Ä–æ–∫–∏-----------------------------//
// charAt(index)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª –ø–æ –∏–Ω–¥–µ–∫—Å—É
console.log(sampleString.charAt(1)); // 'e'

// charCodeAt(index)
// –ö–æ–¥ —Å–∏–º–≤–æ–ª–∞ (UTF-16)
console.log(sampleString.charCodeAt(1)); // 101

// codePointAt(index)
// –Æ–Ω–∏–∫–æ–¥-–∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ (–¥–ª—è —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤)
console.log(sampleString.codePointAt(1)); // 101

// at(index)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ (ES2022)
console.log(sampleString.at(-1)); // '!' (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª)

// 2. –ú–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞ ------------------------------------------------------//
// indexOf(substring)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
console.log(sampleString.indexOf("World")); // 7

// lastIndexOf(substring)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
console.log(sampleString.lastIndexOf("o")); // 8

// includes(substring)
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
console.log(sampleString.includes("Hello")); // true

// startsWith(substring)
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
console.log(sampleString.startsWith("Hello")); // true

// endsWith(substring)
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫—É
console.log(sampleString.endsWith("!")); // true

// match(regexp)
// –ò—â–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º
console.log(sampleString.match(/o/g)); // ['o', 'o']

// matchAll(regexp)
// –ò—â–µ—Ç –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º (ES2020)
const regex = /o/g;
const matches = sampleString.matchAll(regex);
for (const match of matches) {
    console.log(match); // ['o']
}

// 3. –ú–µ—Ç–æ–¥—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ------------------------------------------------------//

// slice(start, end)
// –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
console.log(sampleString.slice(0, 5)); // 'Hello'

// substring(start, end)
// –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ (–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã)
console.log(sampleString.substring(0, 5)); // 'Hello'

// substr(start, length)
// –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ –ø–æ –¥–ª–∏–Ω–µ (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥)
console.log(sampleString.substr(7, 5)); // 'World'

// split(separator)
// –†–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
console.log(sampleString.split(", ")); // ['Hello', 'World!']

// 4. –ú–µ—Ç–æ–¥—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É)------------------------------------------------------//

// toLowerCase()
// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
console.log(sampleString.toLowerCase()); // 'hello, world!'

// toUpperCase()
// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
console.log(sampleString.toUpperCase()); // 'HELLO, WORLD!'

// trim()
// –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
let stringWithSpaces = "   Hello, World!   ";
console.log(stringWithSpaces.trim()); // 'Hello, World!'

// replace(searchValue, newValue)
// –ó–∞–º–µ–Ω—è–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
console.log(sampleString.replace("World", "JavaScript")); // 'Hello, JavaScript!'

// repeat(count)
// –ü–æ–≤—Ç–æ—Ä—è–µ—Ç —Å—Ç—Ä–æ–∫—É –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑
console.log("Ha".repeat(3)); // 'HaHaHa'

// replaceAll(search, replacement)
// –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ (ES2021)
let text = "foo bar foo baz";
console.log(text.replaceAll("foo", "EZ")); // 'EZ bar EZ baz'

// trimStart()
// –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ (ES2019)
console.log(stringWithSpaces.trimStart()); // 'Hello, World!   '

// trimEnd()
// –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏ (ES2019)
console.log(stringWithSpaces.trimEnd()); // '   Hello, World!'

// padStart(targetLength, padString)
// –î–æ–ø–æ–ª–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∞—á–∞–ª–µ –¥–æ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã (ES2017)
console.log("5".padStart(3, "0")); // '005'

// padEnd(targetLength, padString)
// –î–æ–ø–æ–ª–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ü–µ –¥–æ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã (ES2017)
console.log("5".padEnd(3, "0")); // '500'

// normalize(form)
// –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ–æ—Ä–º–æ–π –Æ–Ω–∏–∫–æ–¥–∞ (ES2015)
let accentedString = "√©";
console.log(accentedString.normalize("NFD")); // 'eÃÅ' (—Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å–∏–º–≤–æ–ª—ã)

// 5. –ú–µ—Ç–æ–¥—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ------------------------------------------------------//

// localeCompare(otherString)
// –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É—á—ë—Ç–æ–º –ª–æ–∫–∞–ª–∏
console.log("a".localeCompare("b")); // -1

// toString()
// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç String –≤ —Å—Ç—Ä–æ–∫—É
let strObj = new String("Hello");
console.log(strObj.toString()); // 'Hello'

// valueOf()
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
console.log(strObj.valueOf()); // 'Hello'

// 6. –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∏ –∏—Ç–µ—Ä–∞—Ü–∏–µ–π ------------------------------------------------------//

// [Symbol.iterator]()
// –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–∏–º–≤–æ–ª–∞–º —Å—Ç—Ä–æ–∫–∏
for (const char of sampleString) {
    console.log(char);
}

// raw(strings, ...substitutions)
// –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è "—Å—ã—Ä—ã—Ö" —Å—Ç—Ä–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ (ES2015)
function tag(strings, ...substitutions) {
    return strings.raw[0];
}

console.log(tag`Hello\nWorld`); // 'Hello\nWorld'

// 7. –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã String ------------------------------------------------------//
// fromCharCode(...codes)
// –°–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
console.log(String.fromCharCode(72, 101, 108, 108, 111)); // 'Hello'

// fromCodePoint(...codePoints)
// –°–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —é–Ω–∏–∫–æ–¥-–∫–æ–¥–æ–≤ (ES2015)
console.log(String.fromCodePoint(128512, 128513)); // 'üòÄüòÅ'

// 8. –®–∞–±–ª–æ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã (Template Literals) ------------------------------------------------------//
let name = "Alice";
let greeting = `Hello, ${name}!`; // –í—Å—Ç–∞–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
console.log(greeting); // 'Hello, Alice!'

let multiLine = `This is line 1.
This is line 2.
This is line 3.`; // –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
console.log(multiLine);

/*
    –°–∞–º—ã–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ:
    includes, slice, replace, split, trim, toLowerCase, padStart, startsWith.
 */

// ---------------------------------------------------------------------------------//